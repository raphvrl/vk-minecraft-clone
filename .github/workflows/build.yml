name: Build and Release

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  build:
    name: Build Windows Release
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            mingw-w64-x86_64-clang
            mingw-w64-x86_64-cmake
            make
            git
            zip
      
      - name: Install Vulkan SDK
        shell: powershell
        run: |
          $vulkanSdkUrl = "https://sdk.lunarg.com/sdk/download/1.3.239.0/windows/VulkanSDK-1.3.239.0-Installer.exe"
          $installerPath = "$env:TEMP\VulkanSDK-Installer.exe"
          Invoke-WebRequest -Uri $vulkanSdkUrl -OutFile $installerPath
          Start-Process -FilePath $installerPath -ArgumentList "--accept-licenses --default-answer --confirm-command install" -Wait
          echo "VULKAN_SDK=$env:VULKAN_SDK" >> $env:GITHUB_ENV
      
      - name: Build project
        run: |
          export VULKAN_SDK=/c/VulkanSDK/1.3.239.0
          make release -j$(nproc)
      
      - name: Prepare artifacts
        run: |
          mkdir -p release-package
          cp vulkan-minecraft.exe release-package/
          cp -r assets release-package/
          cd release-package
          zip -r ../vulkan-minecraft-${GITHUB_REF_NAME}.zip .
      
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: Vulkan Minecraft ${{ github.ref_name }}
          files: vulkan-minecraft-${{ github.ref_name }}.zip
          body_path: CHANGELOG.md
          draft: false
          prerelease: false