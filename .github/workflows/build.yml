name: Build

on:
  push:
    branches: [ main ]

jobs:
  build-windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: >-
          mingw-w64-x86_64-gcc
          mingw-w64-x86_64-cmake
          mingw-w64-x86_64-make
          make

    - name: Install Vulkan SDK
      shell: pwsh
      run: |
        $vulkanSdk = "C:\VulkanSDK"
        $version = "1.3.275.0"
        $installer = "VulkanSDK-$version-Installer.exe"
        $url = "https://sdk.lunarg.com/sdk/download/$version/windows/$installer"
        
        Invoke-WebRequest -Uri $url -OutFile $installer
        Start-Process -FilePath ".\$installer" -ArgumentList "--accept-licenses --default-answer --confirm-command install" -Wait
        
        echo "VULKAN_SDK=$vulkanSdk\$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

    - name: Build
      run: |
        make release

    - name: Create and sign certificate
      if: github.event_name != 'pull_request'
      shell: pwsh
      run: |
        # Créer un certificat auto-signé avec plus d'informations
        $cert = New-SelfSignedCertificate `
          -Subject "CN=VulkanMinecraftClone, O=tmpOrganisation, OU=raphvrl, E=tmp@gmail.com" `
          -Type CodeSigning `
          -CertStoreLocation Cert:\CurrentUser\My `
          -FriendlyName "Vulkan Minecraft Certificate" `
          -NotAfter (Get-Date).AddYears(3)
          
        # Trouver signtool.exe
        $signtool = Get-ChildItem -Path "${env:ProgramFiles(x86)}\Windows Kits\10\bin\*\x64\signtool.exe" | Select-Object -First 1 -ExpandProperty FullName
        
        if (-Not $signtool) {
          $signtool = Get-ChildItem -Path "C:\Program Files (x86)\Windows Kits\10\bin" -Recurse -Filter "signtool.exe" | 
                    Where-Object { $_.Directory.Name -match "x64" } | 
                    Select-Object -First 1 -ExpandProperty FullName
        }
        
        # Signer l'exécutable avec plus de détails
        & $signtool sign /sha1 $cert.Thumbprint `
          /fd sha256 `
          /tr http://timestamp.digicert.com `
          /td sha256 `
          /d "Vulkan Minecraft Clone" `
          /du "https://github.com/raphvrl/vk-minecraft-clone" `
          /n "RaphVrl" `
          app.exe

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: vulkan-minecraft
        path: |
          app.exe
          assets/